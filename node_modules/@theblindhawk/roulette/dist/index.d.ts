import { OptionalConstruct, SectionData } from './utils/construct';
export default class Roulette {
    private container;
    private board;
    private arrow;
    private settings;
    private _sections;
    private audio;
    private _degrees;
    private _isRolling;
    private _history;
    onstart?: (roll: SectionData) => void;
    onstop?: (roll: SectionData) => void;
    constructor(c: OptionalConstruct);
    get isRolling(): boolean;
    get degrees(): number;
    get history(): SectionData[];
    get sections(): import("./utils/construct").RefinedSectionData[];
    roll(value?: string | number): import("./utils/construct").RefinedSectionData | SectionData;
    rollProbabilities(probabilities?: number[]): import("./utils/construct").RefinedSectionData | SectionData | undefined;
    rollByIndex(index: number): import("./utils/construct").RefinedSectionData | SectionData;
    asyncRollByIndex(promise: Promise<number>): Promise<SectionData>;
    private drawSVGRoulette;
    private getSector;
}
//# sourceMappingURL=index.d.ts.map